rules:
  - id: allow-privilege-escalation
    patterns:
      - pattern-inside: |
          containers:
            ...
      - pattern: |
          image: ...
          ...
      - pattern-not: |
          image: ...
          ...
          securityContext:
            ...
            allowPrivilegeEscalation: false
    message: "Container allows for privilege escalation via setuid or setgid
      binaries. Add 'allowPrivilegeEscalation: false' in 'securityContext' to
      prevent this."
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation
        - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        - https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt
        - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: exposing-docker-socket-hostpath
    patterns:
      - pattern-inside: |
          volumes:
            ...
      - pattern: |
          hostPath:
            ...
            path: /var/run/docker.sock
    message: Exposing host's Docker socket to containers via a volume. The owner of
      this socket is root. Giving someone access to it is equivalent to giving
      unrestricted root access to your host. Remove 'docker.sock' from hostpath
      to prevent this.
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/storage/volumes/#hostpath
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems
        - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-1-do-not-expose-the-docker-daemon-socket-even-to-the-containers
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: hostipc-pod
    patterns:
      - pattern-inside: |
          spec:
            ...
      - pattern: |
          hostIPC: true
    message: Pod is sharing the host IPC namespace. This allows container processes
      to communicate with processes on the host which reduces isolation and
      bypasses container protection models. Remove the 'hostIPC' key to disable
      this functionality.
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: hostnetwork-pod
    patterns:
      - pattern-inside: |
          spec:
            ...
      - pattern: |
          hostNetwork: true
    message: Pod may use the node network namespace. This gives the pod access to
      the loopback device, services listening on localhost, and could be used to
      snoop on network activity of other pods on the same node. Remove the
      'hostNetwork' key to disable this functionality.
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: hostpid-pod
    patterns:
      - pattern-inside: |
          spec:
            ...
      - pattern: |
          hostPID: true
    message: Pod is sharing the host process ID namespace. When paired with ptrace
      this can be used to escalate privileges outside of the container. Remove
      the 'hostPID' key to disable this functionality.
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: privileged-container
    pattern-either:
      - patterns:
          - pattern-inside: |
              containers:
                ...
          - pattern: |
              image: ...
              ...
              securityContext:
                ...
                privileged: true
      - patterns:
          - pattern-inside: |
              spec:
                ...
          - pattern-not-inside: |
              image: ...
              ...
          - pattern: |
              privileged: true
    message: Container or pod is running in privileged mode. This grants the
      container the equivalent of root capabilities on the host machine. This
      can lead to container escapes, privilege escalation, and other security
      concerns. Remove the 'privileged' key to disable this capability.
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged
        - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: run-as-non-root
    patterns:
      - pattern-inside: |
          containers:
            ...
      - pattern: |
          image: ...
          ...
      - pattern-not: |
          image: ...
          ...
          securityContext:
            ...
            runAsNonRoot: true
    message: "Container allows for running applications as root. This can result in
      privilege escalation attacks. Add 'runAsNonRoot: true' in
      'securityContext' to prevent this."
    metadata:
      references:
        - https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/
        - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: seccomp-confinement-disabled
    patterns:
      - pattern-inside: |
          containers:
            ...
      - pattern: |
          image: ...
          ...
          securityContext:
            ...
            seccompProfile: unconfined
    message: "Container is explicitly disabling seccomp confinement. This runs the
      service in an unrestricted state. Remove 'seccompProfile: unconfined' to
      prevent this."
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
        - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: skip-tls-verify-cluster
    pattern: |
      cluster:
        ...
        insecure-skip-tls-verify: true
    message: "Cluster is disabling TLS certificate verification when communicating
      with the server. This makes your HTTPS connections insecure. Remove the
      'insecure-skip-tls-verify: true' key to secure communication."
    metadata:
      references:
        - https://kubernetes.io/docs/reference/config-api/client-authentication.v1beta1/#client-authentication-k8s-io-v1beta1-Cluster
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: skip-tls-verify-service
    pattern: |
      spec:
        ...
        insecureSkipTLSVerify: true
    message: "Service is disabling TLS certificate verification when communicating
      with the server. This makes your HTTPS connections insecure. Remove the
      'insecureSkipTLSVerify: true' key to secure communication."
    metadata:
      references:
        - https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#apiservice-v1-apiregistration-k8s-io
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING

  - id: writable-filesystem-container
    patterns:
      - pattern-inside: |
          containers:
            ...
      - pattern: |
          image: ...
          ...
      - pattern-not: |
          image: ...
          ...
          securityContext:
            ...
            readOnlyRootFilesystem: true
    message: "Container is running with a writable root filesystem. This may allow
      malicious applications to download and run additional payloads, or modify
      container files. If an application inside a container has to save
      something temporarily consider using a tmpfs. Add 'readOnlyRootFilesystem:
      true' to this container to prevent this."
    metadata:
      references:
        - https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems
        - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
        - https://blog.atomist.com/security-of-docker-kubernetes/
        - https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only
      category: security
      technology:
        - kubernetes
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - yaml
    severity: WARNING
