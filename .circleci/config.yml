version: 2
jobs:
  setup:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  unit-tests:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
#      - run: npm audit --only=prod --audit-level=moderate
      - run: npm run lint
      - run: npm run unit-tests
      - store_artifacts:
          path: ./coverage
  integration-tests:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run integration-tests
  system-tests:
    docker:
      - image: circleci/node:10
      - image: zooz/predator:latest
        environment:
          JOB_PLATFORM: DOCKER
          INTERNAL_ADDRESS: http://127.0.0.1:80/v1
          DATABASE_NAME: predator
          DATABASE_TYPE: SQLITE
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm run system-tests
  build:
    docker:
      - image: docker:18
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run: sh .circleci/dockerBuild.sh
  release-patch:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - add_ssh_keys:
          fingerprints:
            - "b4:24:34:b0:e9:25:4b:1e:6f:b3:06:44:4b:a9:9d:f1"
      - run: .circleci/releasePatch.sh
      - run: .circleci/tag-latest-image.sh
  release-minor:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - add_ssh_keys:
          fingerprints:
            - "b4:24:34:b0:e9:25:4b:1e:6f:b3:06:44:4b:a9:9d:f1"
      - run: .circleci/releaseMinor.sh
      - run: .circleci/tag-latest-image.sh
  release-major:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - add_ssh_keys:
          fingerprints:
            - "b4:24:34:b0:e9:25:4b:1e:6f:b3:06:44:4b:a9:9d:f1"
      - run: .circleci/releaseMajor.sh
      - run: .circleci/tag-latest-image.sh
workflows:
  version: 2
  test_build_and_release:
    jobs:
      - setup
      - unit-tests:
          requires:
            - setup
      - integration-tests:
          requires:
            - unit-tests
      - system-tests:
          requires:
            - integration-tests
      - build:
          requires:
            - system-tests
      - release-patch-approval:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - release-minor-approval:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - release-major-approval:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - release-patch:
          requires:
            - release-patch-approval
          filters:
            branches:
              only: master
      - release-minor:
          requires:
            - release-minor-approval
          filters:
            branches:
              only: master
      - release-major:
          requires:
            - release-major-approval
          filters:
            branches:
              only: master
